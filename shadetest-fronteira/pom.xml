<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.otojunior</groupId>
		<artifactId>shadetest-pom</artifactId>
		<version>1.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>shadetest-fronteira</artifactId>
	<packaging>jar</packaging>

	<name>ShadeTest Versão Izpack</name>

	<properties>
		<IA_HOME>C:\\InstallAnywhere2012</IA_HOME>
		
		<izpack.info.appname>${project.name}</izpack.info.appname>
		<izpack.info.appversion>${project.version}</izpack.info.appversion>
		<izpack.info.appsubpath>ShadeTestApplication</izpack.info.appsubpath>
		<izpack.info.url>${project.organization.url}</izpack.info.url>
		<izpack.info.javaversion>${plugin.version.java}</izpack.info.javaversion>
		<izpack.info.company.name>${project.organization.name}</izpack.info.company.name>
		<izpack.info.company.email>shadetest@organizacao.org</izpack.info.company.email>
		<izpack.pack.finalname>${project.build.finalName}</izpack.pack.finalname>
		<izpack.staging>${project.build.directory}/${project.build.finalName}-dist</izpack.staging>
		<izpack.staging.output>${project.build.directory}/${project.build.finalName}-setup</izpack.staging.output>
		
		<!-- 
			NOME DOS ARQUIVOS DE INSTALAÇÃO GERADOS
			1. 	O arquivo de instalação para Windows possui a extensão .exe e é gerado
				pelo plugin do Launch4J especificado neste POM.
			2. 	O arquivo de instação do Linux (32 e 64 bits) possui a extensão .jar e
				é gerado diretamente pelo plugin do IzPack especificado neste POM. 
		-->
		<izpack.installername.windows>ShadeTest-win32</izpack.installername.windows>
		<izpack.installername.linux32>ShadeTest-linux32</izpack.installername.linux32>
		<izpack.installername.linux64>ShadeTest-linux64</izpack.installername.linux64>
		
		<izpack.jre.bundled.file.windows>jre-8u152-windows-i586-sped.tar.gz</izpack.jre.bundled.file.windows>
		<izpack.jre.bundled.file.linux32>jre-8u152-linux-i586-sped.tar.gz</izpack.jre.bundled.file.linux32>
		<izpack.jre.bundled.file.linux64>jre-8u152-linux-x64-sped.tar.gz</izpack.jre.bundled.file.linux64>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.otojunior</groupId>
			<artifactId>shadetest-dominio</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.otojunior</groupId>
			<artifactId>shadetest-checainstancia</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>shadetest</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${plugin.version.build-helper-maven-plugin}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<mainClass>org.otojunior.shadetest.fronteira.App</mainClass>
							<classpathLayoutType>custom</classpathLayoutType>
							<customClasspathLayout>lib/$${artifact.groupId}/$${artifact.artifactId}.$${artifact.extension}</customClasspathLayout>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<Implementation-Branch>${scmBranch}</Implementation-Branch>
							<Implementation-Date>${timestamp}</Implementation-Date>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>${plugin.version.proguard-maven-plugin}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<obfuscate>true</obfuscate>
					<attach>false</attach>
					<proguardVersion>${dependency.version.proguard}</proguardVersion>
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jsse.jar</lib>
					</libs>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>${dependency.version.proguard}</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
			    <artifactId>launch4j-maven-plugin</artifactId>
			    <version>${plugin.version.launch4j-maven-plugin}</version>
			    <executions>
			    	<!-- ########## IzPack - Passo 1 (Geração de executável Windows para JAR principal) ########## -->
			    	<execution>
			    		<id>id-launch4j-executavel</id>
			    		<phase>package</phase>
			    		<goals>
			    			<goal>launch4j</goal>
			    		</goals>
			    		<configuration>
			    			<headerType>gui</headerType>
					    	<dontWrapJar>true</dontWrapJar>
					    	<jar>${project.build.finalName}.jar</jar>
					    	<outfile>${project.build.directory}/${project.build.finalName}.exe</outfile>
					    	<icon>${project.basedir}/src/main/izpack/imagens/ico/foguete.ico</icon>
					    	<jre>
					    		<path>jre</path>
					    		<bundledJre64Bit>false</bundledJre64Bit>
					    		<bundledJreAsFallback>false</bundledJreAsFallback>
					    		<jdkPreference>jreOnly</jdkPreference>
					    		<runtimeBits>32</runtimeBits>
					    		<initialHeapSize>512</initialHeapSize>
					    		<maxHeapSize>1024</maxHeapSize>
					    		<opts>
					    			<opt>-Dfile.encoding=UTF-8</opt>
					    		</opts>
					    	</jre>	
			    		</configuration>
			    	</execution>
			    	
			    	<!-- ########## IzPack - Passo 7 (Geração de executável Windows para o instalador) ########## -->
			    	<execution>
			    		<id>id-launch4j-instalador</id>
			    		<phase>verify</phase>
			    		<goals>
			    			<goal>launch4j</goal>
			    		</goals>
			    		<configuration>
							<headerType>gui</headerType>
							<jar>${izpack.staging.output}/${project.build.finalName}-setup-windows.jar</jar>
							<outfile>${izpack.staging.output}/${izpack.installername.windows}.exe</outfile>
							<icon>${izpack.staging}/imagens/ico/instalador.ico</icon>
							<singleInstance>
								<mutexName>mutexteste</mutexName>
							</singleInstance>
							<jre>
								<minVersion>1.6.0</minVersion>
							</jre>
					    </configuration>
			    	</execution>
			    </executions>
			</plugin>
			
			<!-- ########## IzPack - Passo 2 (Criação da pasta do staging e cópia de bibliotecas) ########## -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${plugin.version.maven-assembly-plugin}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>${basedir}/assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<!-- ########## IzPack - Passo 3 (Cópia de recursos para pasta do staging) ########## -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${plugin.version.maven-resources-plugin}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${izpack.staging}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/recursos</directory>
									<targetPath>recursos</targetPath>
								</resource>
								<resource>
									<directory>${project.basedir}/configuracoes</directory>
									<targetPath>configuracoes</targetPath>
								</resource>
								<resource>
									<directory>${project.basedir}/src/main/izpack</directory>
									<targetPath></targetPath>
								</resource>
								<resource>
									<directory>${project.build.directory}</directory>
									<targetPath></targetPath>
									<includes>
										<include>${project.build.finalName}.jar</include>
										<include>${project.build.finalName}.exe</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- ########## IzPack - Passo 4 (Criação da pasta mysql) ########## -->	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>1.8</version>
			    <executions>
			    	<execution>
			    		<phase>package</phase>
			    		<goals>
			    			<goal>run</goal>
			    		</goals>
			    	</execution>
			    </executions>
			    <configuration>
			    	<target>
						<mkdir dir="${izpack.staging}/mysql"/>    		
			    	</target>
			    </configuration>
			</plugin>
			
			<!-- ########## IzPack - Passo 5 (Cópia do Java Embutido para pasta de staging) ########## -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${plugin.version.maven-dependency-plugin}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${izpack.staging}</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>br.gov.serpro.sped</groupId>
									<artifactId>jre</artifactId>
									<version>8u152-windows-i586-sped</version>	
									<type>tar.gz</type>
								</artifactItem>
								<artifactItem>
									<groupId>br.gov.serpro.sped</groupId>
									<artifactId>jre</artifactId>
									<version>8u152-linux-i586-sped</version>	
									<type>tar.gz</type>
								</artifactItem>
								<artifactItem>
									<groupId>br.gov.serpro.sped</groupId>
									<artifactId>jre</artifactId>
									<version>8u152-linux-x64-sped</version>	
									<type>tar.gz</type>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- ########## IzPack - Passo 6 (Execução do IzPack) ########## -->
			<plugin>
			    <groupId>org.codehaus.izpack</groupId>
			    <artifactId>izpack-maven-plugin</artifactId>
			    <version>5.2.0.sped-SNAPSHOT</version>
				<executions>
					<execution>
						<id>id-izpack-windows</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<baseDir>${izpack.staging}</baseDir>
							<installFile>${basedir}/src/main/izpack/install_main_os_windows.xml</installFile>
							<outputDirectory>${izpack.staging.output}</outputDirectory>
							<finalName>${project.build.finalName}-setup-windows</finalName>
							<mkdirs>true</mkdirs>
						</configuration>
					</execution>
					<execution>
						<id>id-izpack-linux32</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<baseDir>${izpack.staging}</baseDir>
							<installFile>${basedir}/src/main/izpack/install_main_os_linux32.xml</installFile>
							<outputDirectory>${izpack.staging.output}</outputDirectory>
							<finalName>${izpack.installername.linux32}</finalName>
							<mkdirs>true</mkdirs>
						</configuration>
					</execution>
					<execution>
						<id>id-izpack-linux64</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<baseDir>${izpack.staging}</baseDir>
							<installFile>${basedir}/src/main/izpack/install_main_os_linux64.xml</installFile>
							<outputDirectory>${izpack.staging.output}</outputDirectory>
							<finalName>${izpack.installername.linux64}</finalName>
							<mkdirs>true</mkdirs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- ########## IzPack - Passo 7 (Checksum) ########## -->
			<plugin>
				<groupId>net.nicoulaj.maven.plugins</groupId>
		        <artifactId>checksum-maven-plugin</artifactId>
		        <version>1.6</version>
		        <executions>
		        	<execution>
		        		<phase>verify</phase>
		        		<goals>
		        			<goal>files</goal>
		        		</goals>
		        	</execution>
		        </executions>
		        <configuration>
					<fileSets>
						<fileSet>
							<directory>${izpack.staging.output}</directory>
							<includes>
								<include>${izpack.installername.linux32}.jar</include>
								<include>${izpack.installername.linux64}.jar</include>
								<include>${izpack.installername.windows}.exe</include>
							</includes>
						</fileSet>
					</fileSets>
					<algorithms>
						<algorithm>SHA-1</algorithm>
					</algorithms>
  					<shasumSummary>true</shasumSummary>
  					<shasumSummaryFile>${izpack.staging.output}/checksums.sha</shasumSummaryFile>
  					<individualFiles>false</individualFiles>
		        </configuration>
			</plugin>
		</plugins>
	</build>
</project>
